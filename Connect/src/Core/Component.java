package Core;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Component.java
//  @ Date : 17.05.2014
//  @ Author : 
//
//


import GUI.GUI_Component;




public class Component {
	private String id;
	protected boolean SecurityIsStopped = false;
	private List<Port> ports;
	private Map<String, String> attributes;
	private GUI_Component myGUI;
	private int tempX = 0;
	private int tempY = 0;
	
	public Component() {
		ports = new ArrayList<Port>();
		attributes = new HashMap();
		init();
	}
	public Component(String id) {
		this.id = id;
		ports = new ArrayList<Port>();
		init();
	}
	
	public void setTempCoordinates(int x, int y)
	{
		tempX = x;
		tempY = y;
	}
	
	public int getTempX()
	{
		return tempX;
	}
	
	public int getTempY()
	{
		return tempY;
	}
	
	public GUI_Component getMyGUI() {
		return myGUI;
	}
	public void setMyGUI(GUI_Component myComponent) {
		this.myGUI = myComponent;
	}
	
	public Map<String, String> getAttributes() {
		return attributes;
	}
	public void setAttributes(Map<String, String> attributes) {
		this.attributes = attributes;
	}
	public boolean hasAttributes()
	{
		return !attributes.isEmpty();
	}
	
	public void setAttribute(String key, String value)
	{
		attributes.put(key, value);
	}
	
	public void removeAttribute(String key)
	{
		attributes.remove(key);
	}
	
	public String getAttribute(String key)
	{
		return attributes.get(key);
	}
	
	public void addPort(Port c)
	{
		ports.add(c);
	}
	
	public void removePort(Port c)
	{
		ports.remove(c);
	}
	
	public Port getPort(String id)
	{
		for(Port c: ports)
		{
			if(c.getId().equals(id))
			{
				return c;
			}
		}
		return null;
	}
	
	public List<Port> getPorts() {
		return ports;
	}
	
	public void setPorts(List<Port> ports) {
		this.ports = ports;
	}
	
	public boolean hastPort(String portId)
	{
		return getPort(portId) != null;
	}
	
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public void exec() {
	
	}
	
	public void init() {
	
	}
	
	public void finalies() {
		myGUI.dispose();
	}
	
	public void SecurityRestart() {
		SecurityIsStopped = false;
	}
	
	public void SecurityStop() {
		SecurityIsStopped = true;
		for(Port p: ports)
		{
			p.setState(false);
		}
	}
	
	public String getHelp()
	{
		return "Hier könnte ihre Hilfe stehen!";
	}
}
